@mixin ir {
    display: block;
    text-indent: -999em;
    overflow: hidden;
    background-repeat: no-repeat;
    text-align: left;
    direction: ltr;
}

@mixin count_color($name, $color)
{
    &.#{$name} {
        background: $color;
        &.loading {
            background:
                image-url("img_loading_count_#{$name}.gif") no-repeat center center $color;
            text-indent: -9000px;
        }
    }
}

@mixin container_header_icon($name)
{
    &.#{$name} {
        background:
            image-url("img_icon_#{$name}.png") no-repeat 8px center transparent;
        padding: 5px 5px 5px 33px;
    }
}

/* Mixins and Supportive Variables */

$base_path      : "";
$path           : $base_path + "/assets";

@mixin background($imgpath, $repeat: no-repeat, $position: left top, $color: transparent) {
  background: {
    color: $color;
    image: url($imgpath);
    position: $position;
    repeat: $repeat;
  }
}

@mixin font-face($fontpath, $font-family: 'Helvetica Neue', $font-weight: 400) {
    @font-face {
        font-family: $font-family;
        src: url($fontpath);
        font-weight:$font-weight;
    }
}

@mixin font-size($size, $line-height: 18px) {
  font-size: $size;
  line-height: ceil($size / $line-height) * $line-height;
}

// background-size
@mixin background-size ($val: 100% 100%)
{
  -webkit-background-size: $val;
  -moz-background-size: $val;
  -o-background-size: $val;
  background-size: $val;
}

// transition
@mixin transition ($val: none)
{
  -moz-transition: $val;
  -webkit-transition: $val;
  -ms-transition: $val;
  -o-transition: $val;
  transition: $val;
}

// box-shadow
@mixin box-shadow ($val: none)
{
  -webkit-box-shadow: $val;
  -moz-box-shadow: $val;
  -o-box-shadow: $val;
  box-shadow: $val;
}

// box-flex
@mixin box-flex ($val: none)
{
  -moz-box-flex: $val;
  -webkit-box-flex: $val;
  -ms-box-flex: $val;
  -moz-box-flex: $val;
  box-flex: $val;
}

// box-sizing
@mixin box-sizing ($val: none)
{
  -ms-box-sizing: $val;
  -webkit-box-sizing: $val;
  -moz-box-sizing: $val;
  box-sizing: $val;
}

// box-orient
@mixin box-orient ($val: none)
{
  moz-box-orient: $val;
  -webkit-box-orient: $val;
  -ms-box-orient: $val;
  box-orient: $val;
}

// box-align
@mixin box-align ($val: none)
{
  -moz-box-align: $val;
  -webkit-box-align: $val;
  -ms-box-align: $val;
  box-align: $val;
}

// box-pack
@mixin box-pack ($val: none)
{
  -moz-box-box-pack: $val;
  -webkit-box-pack: $val;
  -ms-box-pack: $val;
  box-pack: $val;
}

// user-select
@mixin user-select ($val: none)
{
  -moz-user-select: $val;
  -khtml-user-select: $val;
  -webkit-user-select: $val;
  -ms-user-select: $val;
  user-select: $val;
}

// display-box
@mixin display-box ()
{
  display: -webkit-box;
  display: -khtml-box;
  display: -ms-box;
  display: -moz-box;
  display: box;
  width: -moz-available;
}

// border-radius
@mixin border-radius ($val: none)
{
  -webkit-border-radius: $val;
  -khtml-border-radius: $val;
  -moz-border-radius: $val;
  -ms-border-radius: $val;
  -o-border-radius: $val;
  border-radius: $val;
}

// background-clip
@mixin background-clip ($val: none)
{
  -webkit-background-clip: $val;
  -moz-background-clip: $val;
  background-clip: $val;
}

// transition
@mixin transition ($val: none)
{
  -webkit-transition: $val;
  -moz-transition: $val;
  -ms-transition: $val;
  -o-transition: $val;
  transition: $val;
}

// opacity
@mixin opacity ($val: 100)
{
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  filter: alpha(opacity = $val);
  -khtml-opacity: $val / 100;
  -moz-opacity: $val / 100;
  opacity: $val / 100;
}

@mixin grey-box {
  border: 1px solid $grey-border;
  @include border-radius(3px);
  @include box-shadow(0 1px 2px #c5c5c5);
  background-color: $grey;
  padding: 20px;
}

// background-gradient
// Relys on ie-hex-str sass function in config/initializers
@mixin background-gradient ($top, $bottom, $fallback: transparent) {
  background: $fallback !important;
  background-image: -webkit-gradient(linear, left top, left bottom, from($top), to($bottom))  !important;
  background-image: -webkit-linear-gradient($top, $bottom)  !important;
  background-image: -moz-linear-gradient(center top, $top 0%, $bottom 100%)  !important;
  background-image: -moz-gradient(center top, $top 0%, $bottom 100%)  !important;
  background-image: -o-linear-gradient(top, $top 0%, $bottom 100%) !important;
  background-image: -ms-linear-gradient(top, $top 0%, $bottom 100%) !important;
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($top)}', endColorstr='#{ie-hex-str($bottom)}');" !important;
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($top)}', endColorstr='#{ie-hex-str($bottom)}') !important;
  zoom: 1 !important;
}

// vetical gradient
@mixin vertical-gradient($start, $end) {
  background-color: $start;
  background-image: -moz-linear-gradient(top, $start, $end);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, $start), color-stop(1, $end));
  filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start}', EndColorStr='#{$end}');
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start}', EndColorStr='#{$end}')";
}

// horizontal gradient
@mixin horizontal-gradient($start, $end) {
  background-color: $start;
  background-image: -moz-linear-gradient(left, $start, $end);
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0, $start), color-stop(1, $end));
  filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start}', endColorStr='#{$end}', gradientType=1);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start}', endColorStr='#{$end}', gradientType=1)";
}

@mixin linkedin-container($margin-top, $margin-left) {
  .linkedin-container {
    z-index: 10;
    margin-top: $margin-top;
    margin-left: $margin-left;
  }
}
